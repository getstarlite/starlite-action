name: 'starlite-alpha'
description: 'Integrates with Starlite (alpha)'
branding:
  icon: 'star'
  color: 'blue'
inputs:
  api-key:
    description: 'Starlite API key'
    required: true
  org-id:
    description: 'Organization ID'
    required: false
  record-id:
    description: 'Record ID'
    required: false
  run-record:
    description: 'Update the record (manifest file)?'
    required: false
    default: 'true'
  run-standards:
    description: 'Update the standards?'
    required: false
    default: 'true'
  run-deployment:
    description: 'Run the deployment script?'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Infer IDs
      id: infer-ids
      run: |
        MANIFEST_PATH="${{ github.workspace }}/starlite.manifest.json"

        if [[ -z "${{ inputs.org-id }}" ]]; then
          if [[ -f "$MANIFEST_PATH" ]]; then
            ORG_ID=$(grep -o '"organizationId"[[:space:]]*:[[:space:]]*".*"' "$MANIFEST_PATH" | awk -F':' '{gsub(/[", ]/, "", $2); print $2}')
            echo "Inferred Organization ID: $ORG_ID"
          fi

          if [[ -z "$ORG_ID" ]]; then
            echo "❌ ERROR: Organization ID is not set and could not be inferred from the manifest file!" >&2
            exit 1
          fi

          echo "org-id=$ORG_ID" >> "$GITHUB_ENV"
        else
          echo "Using provided Record ID: ${{ inputs.org-id }}"
          echo "org-id=${{ inputs.org-id }}" >> "$GITHUB_ENV"
        fi

        if [[ -z "${{ inputs.record-id }}" ]]; then
          if [[ -f "$MANIFEST_PATH" ]]; then
            RECORD_ID=$(grep -o '"id"[[:space:]]*:[[:space:]]*".*"' "$MANIFEST_PATH" | awk -F':' '{gsub(/[", ]/, "", $2); print $2}')
            echo "Inferred Record ID: $RECORD_ID"
          fi

          if [[ -z "$RECORD_ID" ]]; then
            echo "❌ ERROR: Record ID is not set and could not be inferred from the manifest file!" >&2
            exit 1
          fi

          echo "record-id=$RECORD_ID" >> "$GITHUB_ENV"
        else
          echo "Using provided Record ID: ${{ inputs.record-id }}"
          echo "record-id=${{ inputs.record-id }}" >> "$GITHUB_ENV"
        fi
      shell: bash

    - name: Update record
      if: ${{ inputs.run-record == 'true' }}
      run: ${{ github.action_path }}/starlite.sh --org-id ${{ env.org-id }} --record-id ${{ env.record-id }} --token ${{ inputs.api-key }} --action "record"
      shell: bash

    - name: Update standards
      if: ${{ inputs.run-standards == 'true' }}
      run: ${{ github.action_path }}/starlite.sh --org-id ${{ env.org-id }} --record-id ${{ env.record-id }} --token ${{ inputs.api-key }} --action "standards"
      shell: bash

    - name: Create deployment event
      if: ${{ inputs.run-deployment == 'true' }}
      run: ${{ github.action_path }}/starlite.sh --org-id ${{ env.org-id }} --record-id ${{ env.record-id }} --token ${{ inputs.api-key }} --action "deployment"
      shell: bash